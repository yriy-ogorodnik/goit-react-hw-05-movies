{"version":3,"file":"static/js/359.339e4b82.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCACVC,EAAe,qCAAiCD,GAGzCE,EAAmB,mCAAG,oGACVH,EAAAA,EAAAA,IAAA,UAAaE,IADH,cAC3BE,EAD2B,yBAG1BA,EAASC,MAHiB,2CAAH,qDAOnBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRP,EAAAA,EAAAA,IAAA,iBACXO,EADW,oBACGN,EADH,oBADQ,cACzBG,EADyB,yBAKxBA,EAASC,MALe,2CAAH,sDAUjBG,EAAc,mCAAG,WAAMD,GAAN,uFACLP,EAAAA,EAAAA,IAAA,iBACXO,EADW,4BACWN,EADX,oBADK,cACtBG,EADsB,yBAKrBA,EAASC,MALY,2CAAH,sDAUdI,EAAiB,mCAAG,WAAMF,GAAN,uFACRP,EAAAA,EAAAA,IAAA,iBACXO,EADW,4BACWN,EADX,2BADQ,cACzBG,EADyB,yBAKxBA,EAASC,MALe,2CAAH,sDAUjBK,EAAgB,mCAAG,WAAMC,GAAN,uFACPX,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACmCU,EADnC,gCADO,cACxBP,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,qD,qLCxCvBO,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,2QAeHE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAmBE,KAAK,OACvBD,IAGN,EC2DD,EA/EqB,WAAO,IAAD,IAEjBE,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAGXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAE9CC,EAAe,mCAAG,WAAMvB,GAAN,iGAEDD,EAAAA,EAAAA,IAAkBC,GAFjB,OAEdF,EAFc,OAGpBkB,EAASlB,GAHW,gJAAH,uDAQrB0B,EAAAA,EAAAA,YAAU,WACHZ,GAGLW,EAAgBX,EACjB,GAAE,CAACA,IAEJ,IACEa,EAMEV,EANFU,eACAC,EAKEX,EALFW,SACAC,EAIEZ,EAJFY,OACAC,EAGEb,EAHFa,YACAC,EAEEd,EAFFc,aACAC,EACEf,EADFe,aAEIC,GAA4B,GAAfF,GAAmBG,QAAQ,GACxCC,EAAU,IAAIC,KAAKJ,GAAcK,cACvC,OACE,iCACE,SAAC3B,EAAD,CAAUC,GAAIU,EAAaiB,QAA3B,+BACA,UAACC,EAAD,YACE,gBACEC,IAAG,yCAAoCV,GACvCW,IAAI,SACJC,MAAM,MACNC,QAAQ,UAEV,4BACE,0BACGhB,EADH,KACqBQ,EADrB,QAGA,wCAAgBF,EAAhB,QACA,sCACA,uBAAIL,KACJ,oCACA,wBACS,OAANC,QAAM,IAANA,OAAA,EAAAA,EAAQe,SACPf,EAAOgB,KAAI,gBAAG3C,EAAH,EAAGA,GAAI4C,EAAP,EAAOA,KAAP,OAAkB,4BAAgBA,EAAhB,MAAW5C,EAA7B,aAInB,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMS,GAAG,OAAT,UACE,sCAGJ,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,UACE,4CAIN,SAAC,EAAAoC,SAAD,CAAUC,UAAU,uCAApB,UACE,SAAC,KAAD,QAIP,EAIKT,EAAc/B,EAAAA,GAAAA,IAAH,yE","sources":["Api/Api.js","components/Backlink.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'db7375c0f22b53ce13cc7eb00cc2cfa1';\nconst trendingOptions = `trending/movie/day?api_key=${API_KEY}`;\n\n// список найпопулярніших фільмів на сьогодні\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`${trendingOptions}`);\n\n  return response.data;\n};\n\n// запит повної інформації про фільм для сторінки кінофільму.\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\n//  запит інформації про акторський склад для сторінки кінофільму.Cast\n\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\n//  запит оглядів для сторінки кінофільму Reviews\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data;\n};\n\n//  пошук фільму за ключовим словом на сторінці фільмів.\n\nexport const fetchMovieSearch = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n","import { HiArrowNarrowLeft } from \"react-icons/hi\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  /* padding: 8px 0; */\n  padding: 24px 8px;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowNarrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};","import { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useEffect, useState, useRef, Suspense } from 'react';\nimport { fetchMovieDetails } from 'Api/Api';\nimport styled from 'styled-components';\nimport { BackLink } from 'components/Backlink';\n\nconst MovieDetails = () => {\n  //params\n  const { movieId } = useParams();\n\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n\n  // const backLinkHref = location.state?.from ?? \"/\";\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  const getMovieDetails = async id => {\n    try {\n      const data = await fetchMovieDetails(id);\n      setMovie(data);\n    } catch (error) {\n    } finally {\n    }\n  };\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    getMovieDetails(movieId);\n  }, [movieId]);\n\n  const {\n    original_title,\n    overview,\n    genres,\n    poster_path,\n    vote_average,\n    release_date,\n  } = movie;\n  const userScore = (vote_average * 10).toFixed(1);\n  const getYear = new Date(release_date).getFullYear();\n  return (\n    <>\n      <BackLink to={backLinkHref.current}>Back to products</BackLink>\n      <StyleWraper>\n        <img\n          src={`https://image.tmdb.org/t/p/w400${poster_path}`}\n          alt=\"poster\"\n          width=\"400\"\n          loading=\"lazy\"\n        />\n        <div>\n          <h1>\n            {original_title} ({getYear})\n          </h1>\n          <p>User score: {userScore}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>\n            {genres?.length &&\n              genres.map(({ id, name }) => <span key={id}>{name} </span>)}\n          </p>\n        </div>\n      </StyleWraper>\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <Link to=\"cast\">\n            <h4>Cast</h4>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">\n            <h4>Reviews</h4>\n          </Link>\n        </li>\n      </ul>\n      <Suspense fallback={<h1>Loading...</h1>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n\nconst StyleWraper = styled.div`\n  display: flex;\n  padding: 10px;\n  gap: 10px;\n`;\n"],"names":["axios","API_KEY","trendingOptions","fetchTrendingMovies","response","data","fetchMovieDetails","id","fetchMovieCast","fetchMovieReviews","fetchMovieSearch","query","StyledLink","styled","Link","BackLink","to","children","size","movieId","useParams","useState","movie","setMovie","location","useLocation","backLinkHref","useRef","state","from","getMovieDetails","useEffect","original_title","overview","genres","poster_path","vote_average","release_date","userScore","toFixed","getYear","Date","getFullYear","current","StyleWraper","src","alt","width","loading","length","map","name","Suspense","fallback"],"sourceRoot":""}