{"version":3,"file":"static/js/134.b604dfa4.chunk.js","mappings":"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","sources":["Api/Api.js","pages/Movies.jsx","webpack://react-homework-template/./src/pages/home.module.css?ed2f"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'db7375c0f22b53ce13cc7eb00cc2cfa1';\nconst trendingOptions = `trending/movie/day?api_key=${API_KEY}`;\n\n// список найпопулярніших фільмів на сьогодні\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`${trendingOptions}`);\n\n  return response.data;\n};\n\n// запит повної інформації про фільм для сторінки кінофільму.\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\n//  запит інформації про акторський склад для сторінки кінофільму.Cast\n\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\n//  запит оглядів для сторінки кінофільму Reviews\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data;\n};\n\n//  пошук фільму за ключовим словом на сторінці фільмів.\n\nexport const fetchMovieSearch = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n","import { useEffect, useState } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { fetchMovieSearch } from 'Api/Api';\nimport HomeCSS from './home.module.css';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filter = searchParams.get('filter') ?? '';\n  console.log('Movies  filter:', filter);\n\n  const [movies, setMovies] = useState([]);\n\n  const handleChange = e => {\n    e.preventDefault();\n    const value = e.target.search.value.trim();\n\n    setSearchParams({ filter: value });\n  };\n\n  // ______________________\n  const getMoviesOnSearch = async query => {\n    try {\n      const { results } = await fetchMovieSearch(query);\n      console.log('getMoviesOnSearch  results:', results);\n\n      const resultArr = results.map(\n        ({ id, original_title, poster_path, vote_average, vote_count }) => ({\n          id,\n          original_title,\n          poster_path,\n          vote_average,\n          vote_count,\n        })\n      );\n\n      setMovies(resultArr);\n    } catch (error) {\n      // setError(error);\n    } finally {\n    }\n  };\n\n  useEffect(() => {\n    if (!filter) {\n      return;\n    }\n    getMoviesOnSearch(filter);\n  }, [filter]);\n\n  // ______________________-\n\n  return (\n    <div>\n      <form onSubmit={handleChange}>\n        <input\n          name=\"search\"\n          type=\"search\"\n          // onChange={handleChange}\n          placeholder=\"Search movies...\"\n          autoComplete=\"off\"\n          autoFocus\n        />\n        <button type=\"submit\">SEARCH</button>\n      </form>\n      <ul className={HomeCSS.movies}>\n        {movies.map(\n          ({ poster_path, original_title, name, id, vote_average }) => (\n            <li key={id}>\n              <Link\n                to={`/movies/${id}`}\n                state={{ from: `/movies?filter=${filter}` }}\n              >\n                <div>\n                  <div className={HomeCSS.movie__cover__inner}>\n                    <img\n                      src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n                      className={HomeCSS.movie__cover}\n                      alt={original_title}\n                    />\n                    <div className={HomeCSS.movie__cover__darkened}></div>\n                  </div>\n                  <div className={HomeCSS.movie__info}>\n                    <div className={HomeCSS.movie__title}>\n                      {original_title || name}\n                    </div>\n                  </div>\n                </div>\n              </Link>\n            </li>\n          )\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n","// extracted by mini-css-extract-plugin\nexport default {\"movies\":\"home_movies__JU78w\",\"movie\":\"home_movie__mObOI\",\"movie__cover__inner\":\"home_movie__cover__inner__Ego0i\",\"movie__cover\":\"home_movie__cover__zSDnz\",\"movie__cover__darkened\":\"home_movie__cover__darkened__ST1Iz\",\"movie__info\":\"home_movie__info__q0Hx0\",\"movie__title\":\"home_movie__title__KVRAI\",\"movie__category\":\"home_movie__category__agvtB\",\"movie__average\":\"home_movie__average__zxjFx\",\"movie__average__green\":\"home_movie__average__green__3R6Kc\",\"movie__average__orange\":\"home_movie__average__orange__IbaJM\",\"movie__average__red\":\"home_movie__average__red__9gq59\"};"],"names":["axios","API_KEY","trendingOptions","fetchTrendingMovies","response","data","fetchMovieDetails","id","fetchMovieCast","fetchMovieReviews","fetchMovieSearch","query","useSearchParams","searchParams","setSearchParams","filter","get","console","log","useState","movies","setMovies","getMoviesOnSearch","results","resultArr","map","original_title","poster_path","vote_average","vote_count","useEffect","onSubmit","e","preventDefault","value","target","search","trim","name","type","placeholder","autoComplete","autoFocus","className","HomeCSS","to","state","from","src","alt"],"sourceRoot":""}